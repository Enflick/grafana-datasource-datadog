{"version":3,"sources":["../../../spec/query_ctrl_soon.js"],"names":["describe","ctx","beforeEach","angularMocks","module","providePhase","inject","$rootScope","$controller","$q","scope","$new","target","datasource","metricFindQuery","sinon","stub","returns","when","panelCtrl","panel","refresh","spy","ctrl","QueryCtrl","$scope","$digest","it","expect","getCall","args","to","be","segments","value","functions","length","expandable","parseTarget","addFunction","gfunc","getFuncDef","params","called","getAltSegments","then","results","altSegments","targetChanged","targets","refId","updateModelTarget","targetFull"],"mappings":"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","sourcesContent":["\nimport {QueryCtrl} from \"../module\";\nimport 'app/core/services/segment_srv';\nimport sinon from 'sinon';\n\nimport dfunc from '../dfunc';\n\ndescribe('DataDogQueryCtrl', function() {\n  let ctx = {};\n\n  beforeEach(angularMocks.module('grafana.core'));\n  beforeEach(angularMocks.module('grafana.controllers'));\n  beforeEach(angularMocks.module('grafana.services'));\n\n  beforeEach(ctx.providePhase());\n  beforeEach(angularMocks.inject(($rootScope, $controller, $q) => {\n    ctx.$q = $q;\n    ctx.scope = $rootScope.$new();\n    ctx.target = {};\n    ctx.datasource.metricFindQuery = sinon.stub().returns(ctx.$q.when([]));\n    ctx.panelCtrl = {panel: {}};\n    ctx.panelCtrl.refresh = sinon.spy();\n\n    ctx.ctrl = $controller(QueryCtrl, {$scope: ctx.scope}, {\n      panelCtrl: ctx.panelCtrl,\n      datasource: ctx.datasource,\n      target: ctx.target\n    });\n    ctx.scope.$digest();\n  }));\n\n  describe('init', function() {\n    it('should validate metric key exists', function() {\n      expect(ctx.datasource.metricFindQuery.getCall(0).args[0]).to.be('test.prod.*');\n    });\n\n    it('should delete last segment if no metrics are found', function() {\n      expect(ctx.ctrl.segments[2].value).to.be('select metric');\n    });\n\n    it('should parse expression and build function model', function() {\n      expect(ctx.ctrl.functions.length).to.be(2);\n    });\n  });\n\n  describe('when adding function', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'test.prod.*.count';\n      ctx.ctrl.datasource.metricFindQuery = sinon.stub().returns(ctx.$q.when([{expandable: false}]));\n      ctx.ctrl.parseTarget();\n      ctx.ctrl.addFunction(gfunc.getFuncDef('aliasByNode'));\n    });\n\n    it('should add function with correct node number', function() {\n      expect(ctx.ctrl.functions[0].params[0]).to.be(2);\n    });\n\n    it('should update target', function() {\n      expect(ctx.ctrl.target.target).to.be('aliasByNode(test.prod.*.count, 2)');\n    });\n\n    it('should call refresh', function() {\n      expect(ctx.panelCtrl.refresh.called).to.be(true);\n    });\n  });\n\n  describe('when adding function before any metric segment', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = '';\n      ctx.ctrl.datasource.metricFindQuery.returns(ctx.$q.when([{expandable: true}]));\n      ctx.ctrl.parseTarget();\n      ctx.ctrl.addFunction(gfunc.getFuncDef('asPercent'));\n    });\n\n    it('should add function and remove select metric link', function() {\n      expect(ctx.ctrl.segments.length).to.be(0);\n    });\n  });\n\n  describe('when initalizing target without metric expression and only function', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'asPercent(#A, #B)';\n      ctx.ctrl.datasource.metricFindQuery.returns(ctx.$q.when([]));\n      ctx.ctrl.parseTarget();\n      ctx.scope.$digest();\n    });\n\n    it('should not add select metric segment', function() {\n      expect(ctx.ctrl.segments.length).to.be(0);\n    });\n\n    it('should add both series refs as params', function() {\n      expect(ctx.ctrl.functions[0].params.length).to.be(2);\n    });\n  });\n\n  describe('when initializing a target with single param func using variable', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'movingAverage(prod.count, $var)';\n      ctx.ctrl.datasource.metricFindQuery.returns(ctx.$q.when([]));\n      ctx.ctrl.parseTarget();\n    });\n\n    it('should add 2 segments', function() {\n      expect(ctx.ctrl.segments.length).to.be(2);\n    });\n\n    it('should add function param', function() {\n      expect(ctx.ctrl.functions[0].params.length).to.be(1);\n    });\n  });\n\n  describe('when initalizing target without metric expression and function with series-ref', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'asPercent(metric.node.count, #A)';\n      ctx.ctrl.datasource.metricFindQuery.returns(ctx.$q.when([]));\n      ctx.ctrl.parseTarget();\n    });\n\n    it('should add segments', function() {\n      expect(ctx.ctrl.segments.length).to.be(3);\n    });\n\n    it('should have correct func params', function() {\n      expect(ctx.ctrl.functions[0].params.length).to.be(1);\n    });\n  });\n\n  describe('when getting altSegments and metricFindQuery retuns empty array', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'test.count';\n      ctx.ctrl.datasource.metricFindQuery.returns(ctx.$q.when([]));\n      ctx.ctrl.parseTarget();\n      ctx.ctrl.getAltSegments(1).then(function(results) {\n        ctx.altSegments = results;\n      });\n      ctx.scope.$digest();\n    });\n\n    it('should have no segments', function() {\n      expect(ctx.altSegments.length).to.be(0);\n    });\n  });\n\n  describe('targetChanged', function() {\n    beforeEach(function() {\n      ctx.ctrl.datasource.metricFindQuery = sinon.stub().returns(ctx.$q.when([{expandable: false}]));\n      ctx.ctrl.parseTarget();\n      ctx.ctrl.target.target = '';\n      ctx.ctrl.targetChanged();\n    });\n\n    it('should rebuld target after expression model', function() {\n      expect(ctx.ctrl.target.target).to.be('aliasByNode(scaleToSeconds(test.prod.*, 1), 2)');\n    });\n\n    it('should call panelCtrl.refresh', function() {\n      expect(ctx.panelCtrl.refresh.called).to.be(true);\n    });\n  });\n\n  describe('when updating targets with nested query', function() {\n    beforeEach(function() {\n      ctx.ctrl.target.target = 'scaleToSeconds(#A)';\n      ctx.ctrl.datasource.metricFindQuery = sinon.stub().returns(ctx.$q.when([{expandable: false}]));\n      ctx.ctrl.parseTarget();\n\n      ctx.ctrl.panelCtrl.panel.targets = [ {\n        target: 'nested.query.count',\n        refId: 'A'\n      }];\n\n      ctx.ctrl.updateModelTarget();\n    });\n\n    it('target should remain the same', function() {\n      expect(ctx.ctrl.target.target).to.be('scaleToSeconds(#A)');\n    });\n\n    it('targetFull should include nexted queries', function() {\n      expect(ctx.ctrl.target.targetFull).to.be('scaleToSeconds(nested.query.count)');\n    });\n  });\n});\n"],"file":"query_ctrl_soon.js"}