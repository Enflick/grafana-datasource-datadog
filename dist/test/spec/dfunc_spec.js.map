{"version":3,"sources":["../../../spec/dfunc_spec.js"],"names":["describe","it","func","dfunc","createFuncInstance","expect","to","be","ok","def","name","equal","params","length","defaultParams","func2","updateText","text","render","withDefaultParams","catIndex","getCategories","Arithmatic","greaterThan","updateParam"],"mappings":"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","sourcesContent":["import dfunc from '../dfunc';\n\ndescribe('when creating func instance from func names', function() {\n  it('should return func instance', function() {\n    var func = dfunc.createFuncInstance('top');\n    expect(func).to.be.ok;\n    expect(func.def.name).to.equal('top');\n    expect(func.def.params.length).to.equal(3);\n    expect(func.def.defaultParams.length).to.equal(3);\n  });\n\n\n  it('should return func instance from funcDef', function() {\n    var func = dfunc.createFuncInstance('top');\n    var func2 = dfunc.createFuncInstance(func.def);\n    expect(func2).to.be.ok;\n  });\n\n  it('func instance should have text representation', function() {\n    var func = dfunc.createFuncInstance('top');\n    func.params[0] = 5;\n    func.params[1] = 'mean';\n    func.params[2] = 'dir';\n    func.updateText();\n    expect(func.text).to.equal(\"top(5, mean, dir)\");\n  });\n});\n\ndescribe('when rendering func instance', function() {\n\n  it('should handle single metric param', function() {\n    var func = dfunc.createFuncInstance('abs');\n    expect(func.render('a')).to.equal(\"abs(a)\");\n  });\n\n  it('should include default params if options enable it', function() {\n    var func = dfunc.createFuncInstance('top', { withDefaultParams: true });\n    expect(func.render('a')).to.equal(\"top(a, 5, mean, dir)\");\n  });\n\n  it('should handle int or interval params with number', function() {\n    var func = dfunc.createFuncInstance('anomalies');\n    func.params[0] = 'basic';\n    func.params[1] = '5';\n    expect(func.render('hello')).to.equal(\"anomalies(hello, basic, 5)\");\n  });\n\n});\n\ndescribe('when requesting function categories', function() {\n  it('should return function categories', function() {\n    var catIndex = dfunc.getCategories();\n    expect(catIndex.Arithmatic.length).to.be.greaterThan(3);\n  });\n});\n\ndescribe('when updating func param', function() {\n  it('should update param value and update text representation', function() {\n    var func = dfunc.createFuncInstance('top', { withDefaultParams: true });\n    func.updateParam('10', 0);\n    expect(func.params[0]).to.be.equal('10');\n    func.updateText();\n    expect(func.text).to.be.equal('top(10, mean, dir)');\n  });\n\n  it('should parse numbers as float', function() {\n    var func = dfunc.createFuncInstance('outliers');\n    func.updateParam('0.5', 1);\n    expect(func.params[1]).to.be.equal('0.5');\n  });\n});\n\ndescribe('when updating func param with optional second parameter', function() {\n  it('should update value and text', function() {\n    var func = dfunc.createFuncInstance('fill');\n    func.updateParam('null', 0);\n    expect(func.params[0]).to.be.equal('null');\n  });\n});\n"],"file":"dfunc_spec.js"}