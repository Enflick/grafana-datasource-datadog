{"version":3,"sources":["../../src/query_builder.js"],"names":["buildQuery","target","adhocFilters","groupByOptions","aggregation","metric","tags","functions","query","functionInstances","getFunctionInstances","length","join","adhocTags","buildAdHocFilterString","globSet","as","groupedFuncs","_","groupBy","func","def","append","each","appends","render","wraps","map","f","dfunc","createFuncInstance","funcDef","withDefaultParams","params","slice","filter","key","value"],"mappings":";;;;;QAIgBA,U,GAAAA,U;;AAJhB;;;;AACA;;;;AACA;;;;AAEO,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,YAA5B,EAAyCC,cAAzC,EAAyD;AAAA,MACzDC,WADyD,GACjBH,MADiB,CACzDG,WADyD;AAAA,MAC5CC,MAD4C,GACjBJ,MADiB,CAC5CI,MAD4C;AAAA,MACpCC,IADoC,GACjBL,MADiB,CACpCK,IADoC;AAAA,MAC9BC,SAD8B,GACjBN,MADiB,CAC9BM,SAD8B;;AAE9D,MAAIC,QAAWJ,WAAX,SAA0BC,MAA9B;;AAEA,MAAII,oBAAqBC,qBAAqBH,SAArB,CAAzB;;AAEA,MAAKD,QAAQA,KAAKK,MAAd,IAA0BT,gBAAgBA,aAAaS,MAA3D,EAAoE;AAClEH,aAAS,GAAT;;AAEA,QAAIF,QAAQA,KAAKK,MAAjB,EAAyB;AACvBH,eAASF,KAAKM,IAAL,CAAU,GAAV,CAAT;AACD;;AAED,QAAIV,gBAAgBA,aAAaS,MAAjC,EAAyC;AACvC,UAAIE,YAAYC,uBAAuBZ,YAAvB,CAAhB;AACA,UAAII,QAAQA,KAAKK,MAAjB,EAAyB;AACvBH,iBAAS,GAAT;AACD;AACDA,eAASK,SAAT;AACD;;AAEDL,aAAS,GAAT;AACD,GAhBD,MAgBO;AACLA,aAAS,KAAT;;AAEA,QAAIO,uBAAWA,oBAAQJ,MAAvB,EAA+B;AAC7BH,eAAS,MAAT;AACAA,eAAS,GAAT;AACAA,eAASO,mBAAT;AACAP,eAAS,GAAT;AACD;AACF;;AAED,MAAIP,OAAOe,EAAX,EAAe;AACbR,aAAS,MAAMP,OAAOe,EAAb,GAAkB,IAA3B;AACD;;AAED,MAAIC,eAAeC,iBAAEC,OAAF,CAAUV,iBAAV,EAA6B,gBAAQ;AACtD,QAAIW,KAAKC,GAAL,CAASC,MAAb,EAAqB;AACnB,aAAO,SAAP;AACD,KAFD,MAEO;AACL,aAAO,OAAP;AACD;AACF,GANkB,CAAnB;;AAQAJ,mBAAEK,IAAF,CAAON,aAAaO,OAApB,EAA6B,gBAAQ;AACnChB,aAAS,MAAMY,KAAKK,MAAL,EAAf;AACD,GAFD;;AAIAP,mBAAEK,IAAF,CAAON,aAAaS,KAApB,EAA2B,gBAAQ;AACjClB,YAAQY,KAAKK,MAAL,CAAYjB,KAAZ,CAAR;AACD,GAFD;;AAIA,SAAOA,KAAP;AACD;;AAED,SAASE,oBAAT,CAA8BH,SAA9B,EAAyC;AACvC,SAAOW,iBAAES,GAAF,CAAMpB,SAAN,EAAiB,gBAAQ;AAC9B,QAAIqB,IAAIC,gBAAMC,kBAAN,CAAyBV,KAAKW,OAA9B,EAAuC,EAACC,mBAAmB,KAApB,EAAvC,CAAR;AACAJ,MAAEK,MAAF,GAAWb,KAAKa,MAAL,CAAYC,KAAZ,EAAX;AACA,WAAON,CAAP;AACD,GAJM,CAAP;AAKD;;AAED,SAASd,sBAAT,CAAgCZ,YAAhC,EAA8C;AAC5C,SAAOA,aAAayB,GAAb,CAAiB,kBAAU;AAChC,WAAOQ,OAAOC,GAAP,GAAa,GAAb,GAAmBD,OAAOE,KAAjC;AACD,GAFM,EAEJzB,IAFI,CAEC,GAFD,CAAP;AAGD","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\nimport dfunc from './dfunc';\nimport {globSet} from './query_ctrl';\n\nexport function buildQuery(target, adhocFilters,groupByOptions) {\n  let {aggregation, metric, tags, functions} = target;\n  let query = `${aggregation}:${metric}`;\n\n  let functionInstances  = getFunctionInstances(functions);\n\n  if ((tags && tags.length) || (adhocFilters && adhocFilters.length)) {\n    query += '{';\n\n    if (tags && tags.length) {\n      query += tags.join(',');\n    }\n\n    if (adhocFilters && adhocFilters.length) {\n      let adhocTags = buildAdHocFilterString(adhocFilters);\n      if (tags && tags.length) {\n        query += ',';\n      }\n      query += adhocTags;\n    }\n\n    query += '}';\n  } else {\n    query += '{*}';\n\n    if (globSet && globSet.length) {\n      query += ' by ';\n      query += '{';\n      query += globSet;\n      query += '}';\n    }\n  }\n\n  if (target.as) {\n    query += '.' + target.as + '()';\n  }\n\n  var groupedFuncs = _.groupBy(functionInstances, func => {\n    if (func.def.append) {\n      return 'appends';\n    } else {\n      return 'wraps';\n    }\n  });\n\n  _.each(groupedFuncs.appends, func => {\n    query += '.' + func.render();\n  });\n\n  _.each(groupedFuncs.wraps, func => {\n    query = func.render(query);\n  });\n\n  return query;\n}\n\nfunction getFunctionInstances(functions) {\n  return _.map(functions, func => {\n    var f = dfunc.createFuncInstance(func.funcDef, {withDefaultParams: false});\n    f.params = func.params.slice();\n    return f;\n  });\n}\n\nfunction buildAdHocFilterString(adhocFilters) {\n  return adhocFilters.map(filter => {\n    return filter.key + ':' + filter.value;\n  }).join(',');\n}\n"]}