{"version":3,"sources":["../../src/add_graphite_func.js"],"names":["console","log","module","directive","$compile","inputTemplate","buttonTemplate","link","$scope","elem","categories","getCategories","allFunctions","getAllFunctionNames","ctrl","functionMenu","createFunctionDropDownMenu","$input","$button","appendTo","attr","typeahead","source","minLength","items","updater","value","funcDef","getFuncDef","toLowerCase","find","funcName","indexOf","$apply","addFunction","trigger","click","hide","show","focus","keyup","toggleClass","val","blur","setTimeout","removeClass","contents","reduce","list","category","each","func","push","name","map","text","submenu"],"mappings":"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","file":"add_graphite_func.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport dfunc from './dfunc';\n\nconsole.log(dfunc);\nangular\n  .module('grafana.directives')\n  .directive('graphiteAddFunc', function($compile) {\n    var inputTemplate = '<input type=\"text\"'+\n                          ' class=\"gf-form-input\"' +\n                          ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var buttonTemplate = '<a  class=\"gf-form-label query-part dropdown-toggle\"' +\n                            ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n                            '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function($scope, elem) {\n        var categories = dfunc.getCategories();\n        var allFunctions = getAllFunctionNames(categories);\n        var ctrl = $scope.ctrl;\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        var $input = $(inputTemplate);\n        var $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            var funcDef = dfunc.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) { return; }\n            }\n\n            $scope.$apply(function() {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function(list, category) {\n    _.each(category, function(func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function(list, category) {\n    return {\n      text: category,\n      submenu: _.map(list, function(value) {\n        return {\n          text: value.name,\n          click: \"ctrl.addFunction('\" + value.name + \"')\",\n        };\n      })\n    };\n  });\n}\n"]}