{"version":3,"sources":["../../src/add_datadog_func.js"],"names":["angular","module","directive","$compile","inputTemplate","buttonTemplate","link","$scope","elem","categories","dfunc","getCategories","allFunctions","getAllFunctionNames","ctrl","functionMenu","createFunctionDropDownMenu","$input","$button","appendTo","attr","typeahead","source","minLength","items","updater","value","funcDef","getFuncDef","toLowerCase","_","find","funcName","indexOf","$apply","addFunction","trigger","click","hide","show","focus","keyup","toggleClass","val","blur","setTimeout","removeClass","contents","reduce","list","category","each","func","push","name","map","text","submenu"],"mappings":"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","file":"add_datadog_func.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport dfunc from './dfunc';\n\nangular\n  .module('grafana.directives')\n  .directive('datadogAddFunc', function($compile) {\n    var inputTemplate = '<input type=\"text\"'+\n                          ' class=\"gf-form-input\"' +\n                          ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var buttonTemplate = '<a  class=\"gf-form-label query-part dropdown-toggle\"' +\n                            ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n                            '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function($scope, elem) {\n        var categories = dfunc.getCategories();\n        var allFunctions = getAllFunctionNames(categories);\n        var ctrl = $scope.ctrl;\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        var $input = $(inputTemplate);\n        var $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            var funcDef = dfunc.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) { return; }\n            }\n\n            $scope.$apply(function() {\n              ctrl.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function(list, category) {\n    _.each(category, function(func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function(list, category) {\n    return {\n      text: category,\n      submenu: _.map(list, function(value) {\n        return {\n          text: value.name,\n          click: \"ctrl.addFunction('\" + value.name + \"')\",\n        };\n      })\n    };\n  });\n}\n"]}