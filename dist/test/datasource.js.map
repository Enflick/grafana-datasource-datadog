{"version":3,"sources":["../../src/datasource.js"],"names":["System","register","_export","_context","_","showdown","queryBuilder","_createClass","DataDogDatasource","_classCallCheck","instance","Constructor","TypeError","mapTagsToKVPairs","tags","kv_tags","filter","tag","indexOf","kv_pairs","map","split","kv_object","forEach","pair","key","val","push","convertDataDogMdToHtml","str","MD_START","MD_END","md_start_index","length","md_end_index","md","substring","removeImagesFromDataDogMarkdown","converter","Converter","makeHtml","isDataDogMarkdown","dataDogImagePattern","replace","dataDogTagFormat","value","isArray","join","setters","_lodash","_showdownMinJs","_query_builder","execute","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype","instanceSettings","backendSrv","templateSrv","type","url","name","api_key","jsonData","application_key","app_key","supportMetrics","_cached_metrics","testDatasource","invokeDataDogApiRequest","then","status","title","message","error","tagFindQuery","getTagsFromCache","hosts","text","metricFindQuery","query","_this","Promise","resolve","fetching","d","Date","setDate","getDate","from","Math","floor","getTime","getMetrics","metrics","metric","getTagKeys","tagsHosts","keys","kv","grafanaTags","getTagValues","options","grafanaValues","range","valueOf","to","targets","t","hide","data","adhocFilters","getAdhocFilters","queries","rawQuery","buildQuery","queryString","scopedVars","params","result","dataResponse","series","expression","pointlist","point","annotationQuery","timeFrom","timeTo","_options$annotation","annotation","priority","sources","getEventStream","eventStreams","eventAnnotations","eventStream","allEvents","children","filteredEvents","event","alert_type","renderedText","time","date_happened","flatten","getHosts","searchEntities","entity","q","results","getTagsHosts","_this2","getTags","_cached_tags","start","end","events","arguments","undefined","datasourceRequest","method","response","statusText","err"],"mappings":"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","sourcesContent":["'use strict';\n\nSystem.register(['lodash', './showdown.min.js', './query_builder'], function (_export, _context) {\n  \"use strict\";\n\n  var _, showdown, queryBuilder, _createClass, DataDogDatasource;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  /*\n   * Convert tags to key-value pairs\n   * [region:east, region:nw] => {region: [east, nw]}\n   */\n  function mapTagsToKVPairs(tags) {\n    var kv_tags = _.filter(tags, function (tag) {\n      return tag.indexOf(':') !== -1;\n    });\n\n    var kv_pairs = kv_tags.map(function (tag) {\n      return tag.split(':', 2); // Limit to 2\n    });\n\n    var kv_object = {};\n    kv_pairs.forEach(function (pair) {\n      var key = pair[0];\n      var val = pair[1];\n\n      if (kv_object[key]) {\n        kv_object[key].push(val);\n      } else {\n        kv_object[key] = [val];\n      }\n    });\n\n    return kv_object;\n  }\n\n  /*\n   * Convert DataDog event text from markdown to pure HTML\n   * http://docs.datadoghq.com/guides/markdown/\n   */\n  function convertDataDogMdToHtml(str) {\n    var MD_START = '%%%\\n';\n    var MD_END = '\\n%%%';\n\n    var md_start_index = str.indexOf(MD_START) + MD_START.length;\n    var md_end_index = str.indexOf(MD_END);\n    var md = str.substring(md_start_index, md_end_index);\n    md = removeImagesFromDataDogMarkdown(md);\n\n    var converter = new showdown.Converter();\n    return converter.makeHtml(md);\n  }\n\n  function isDataDogMarkdown(str) {\n    var MD_START = '%%%\\n';\n    return str.indexOf(MD_START) >= 0;\n  }\n\n  function removeImagesFromDataDogMarkdown(str) {\n    var dataDogImagePattern = /\\[{0,1}\\!\\[.*\\]\\(https{0,1}\\:\\/\\/p\\.datadoghq\\.com\\/snapshot.+\\)/g;\n    return str.replace(dataDogImagePattern, '');\n  }\n\n  function dataDogTagFormat(value) {\n    if (_.isArray(value)) {\n      return value.join(',');\n    }\n    return value;\n  }\n  return {\n    setters: [function (_lodash) {\n      _ = _lodash.default;\n    }, function (_showdownMinJs) {\n      showdown = _showdownMinJs.default;\n    }, function (_query_builder) {\n      queryBuilder = _query_builder;\n    }],\n    execute: function () {\n      _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      _export('DataDogDatasource', DataDogDatasource = function () {\n        function DataDogDatasource(instanceSettings, backendSrv, templateSrv) {\n          _classCallCheck(this, DataDogDatasource);\n\n          this.type = instanceSettings.type;\n          this.url = instanceSettings.url;\n          this.name = instanceSettings.name;\n          this.api_key = instanceSettings.jsonData.api_key;\n          this.application_key = instanceSettings.jsonData.app_key;\n          this.supportMetrics = true;\n          this.backendSrv = backendSrv;\n          this.templateSrv = templateSrv;\n          this._cached_metrics = false;\n        }\n\n        // Function to check Datasource health\n\n\n        _createClass(DataDogDatasource, [{\n          key: 'testDatasource',\n          value: function testDatasource() {\n            return this.invokeDataDogApiRequest('/downtime').then(function () {\n              return {\n                status: \"success\",\n                title: \"Success\",\n                message: \"Data source is working\"\n              };\n            }).catch(function (error) {\n              var message = \"Connection error\";\n              if (error && error.message) {\n                message = error.message;\n              }\n\n              return {\n                status: \"error\",\n                title: \"Error\",\n                message: message\n              };\n            });\n          }\n        }, {\n          key: 'tagFindQuery',\n          value: function tagFindQuery() {\n            return this.getTagsFromCache().then(function (tags) {\n              return _.map(tags, function (hosts, tag) {\n                return {\n                  text: tag,\n                  value: tag\n                };\n              });\n            });\n          }\n        }, {\n          key: 'metricFindQuery',\n          value: function metricFindQuery(query) {\n            var _this = this;\n\n            if (query === 'tag') {\n              return this.tagFindQuery();\n            }\n\n            if (this._cached_metrics) {\n              return Promise.resolve(this._cached_metrics);\n            }\n\n            if (this.fetching) {\n              return this.fetching;\n            }\n\n            var d = new Date();\n            d.setDate(d.getDate() - 1);\n            var from = Math.floor(d.getTime() / 1000);\n\n            this.fetching = this.getMetrics(from).then(function (metrics) {\n              _this._cached_metrics = _.map(metrics, function (metric) {\n                return {\n                  text: metric,\n                  value: metric\n                };\n              });\n\n              return _this._cached_metrics;\n            });\n\n            return this.fetching;\n          }\n        }, {\n          key: 'getTagKeys',\n          value: function getTagKeys() {\n            return this.getTagsFromCache().then(function (tagsHosts) {\n              var tags = Object.keys(tagsHosts);\n              var kv = mapTagsToKVPairs(tags);\n              var grafanaTags = Object.keys(kv);\n\n              return grafanaTags.map(function (tag) {\n                return {\n                  text: tag,\n                  value: tag\n                };\n              });\n            });\n          }\n        }, {\n          key: 'getTagValues',\n          value: function getTagValues(options) {\n            return this.getTagsFromCache().then(function (tagsHosts) {\n              var tags = Object.keys(tagsHosts);\n              var kv = mapTagsToKVPairs(tags);\n              var grafanaValues = kv[options.key];\n              return grafanaValues.map(function (val) {\n                return {\n                  text: val,\n                  value: val\n                };\n              });\n            });\n          }\n        }, {\n          key: 'query',\n          value: function query(options) {\n            var from = Math.floor(options.range.from.valueOf() / 1000);\n            var to = Math.floor(options.range.to.valueOf() / 1000);\n\n            var targets = options.targets.filter(function (t) {\n              return !t.hide;\n            });\n\n            if (targets.length <= 0) {\n              return Promise.resolve({ data: [] });\n            }\n\n            // add global adhoc filters\n            var adhocFilters = this.templateSrv.getAdhocFilters(this.name);\n\n            var queries = _.map(targets, function (target) {\n              var query = void 0;\n              if (target.rawQuery) {\n                query = target.query;\n              } else {\n                query = queryBuilder.buildQuery(target, adhocFilters);\n              }\n              return query;\n            });\n\n            var queryString = queries.join(',');\n            queryString = this.templateSrv.replace(queryString, options.scopedVars, dataDogTagFormat);\n\n            var params = {\n              from: from,\n              to: to,\n              query: queryString\n            };\n\n            return this.invokeDataDogApiRequest('/query', params).then(function (result) {\n              var dataResponse = _.map(result.series, function (series, i) {\n                return {\n                  'target': series.expression,\n                  'datapoints': _.map(series.pointlist, function (point) {\n                    return [point[1], point[0]];\n                  })\n                };\n              });\n\n              return { data: dataResponse };\n            });\n          }\n        }, {\n          key: 'annotationQuery',\n          value: function annotationQuery(options) {\n            var timeFrom = Math.floor(options.range.from.valueOf() / 1000);\n            var timeTo = Math.floor(options.range.to.valueOf() / 1000);\n            var _options$annotation = options.annotation,\n                priority = _options$annotation.priority,\n                sources = _options$annotation.sources,\n                tags = _options$annotation.tags;\n\n\n            return this.getEventStream(timeFrom, timeTo, priority, sources, tags).then(function (eventStreams) {\n              var eventAnnotations = eventStreams.map(function (eventStream) {\n                var allEvents = eventStream.children;\n                var filteredEvents = _.filter(allEvents, function (event) {\n                  return event.alert_type !== 'success';\n                });\n\n                return _.map(filteredEvents, function (event) {\n                  var renderedText = eventStream.text;\n                  if (isDataDogMarkdown(eventStream.text)) {\n                    renderedText = convertDataDogMdToHtml(eventStream.text);\n                  }\n\n                  return {\n                    annotation: options.annotation,\n                    time: event.date_happened * 1000,\n                    title: eventStream.title,\n                    text: renderedText,\n                    tags: eventStream.tags\n                  };\n                });\n              });\n\n              return _.flatten(eventAnnotations);\n            });\n          }\n        }, {\n          key: 'getHosts',\n          value: function getHosts() {\n            return this.searchEntities('hosts');\n          }\n        }, {\n          key: 'searchEntities',\n          value: function searchEntities(entity) {\n            var params = { q: '' };\n            if (entity) {\n              params.q = entity + ':';\n            }\n\n            return this.invokeDataDogApiRequest('/search', params).then(function (result) {\n              if (result && result.results) {\n                return result.results[entity];\n              }\n            });\n          }\n        }, {\n          key: 'getMetrics',\n          value: function getMetrics(timeFrom) {\n            var params = {};\n\n            if (timeFrom) {\n              params.from = timeFrom;\n            }\n\n            return this.invokeDataDogApiRequest('/metrics', params).then(function (result) {\n              if (result.metrics) {\n                return result.metrics;\n              } else {\n                return [];\n              }\n            });\n          }\n        }, {\n          key: 'getTagsHosts',\n          value: function getTagsHosts() {\n            return this.invokeDataDogApiRequest('/tags/hosts').then(function (result) {\n              if (result && result.tags) {\n                return result.tags;\n              }\n            });\n          }\n        }, {\n          key: 'getTagsFromCache',\n          value: function getTagsFromCache() {\n            var _this2 = this;\n\n            var getTags = void 0;\n            if (this._cached_tags && this._cached_tags.length) {\n              getTags = Promise.resolve(this._cached_tags);\n            } else {\n              getTags = this.getTagsHosts().then(function (tags) {\n                _this2._cached_tags = tags;\n                return tags;\n              });\n            }\n\n            return getTags;\n          }\n        }, {\n          key: 'getEventStream',\n          value: function getEventStream(timeFrom, timeTo, priority, sources, tags) {\n            var params = {\n              start: timeFrom,\n              end: timeTo\n            };\n            if (priority) {\n              params.priority = priority;\n            }\n            if (sources) {\n              params.sources = sources;\n            }\n            if (tags) {\n              params.tags = tags;\n            }\n\n            return this.invokeDataDogApiRequest('/events', params).then(function (result) {\n              if (result.events) {\n                return result.events;\n              } else {\n                return [];\n              }\n            });\n          }\n        }, {\n          key: 'invokeDataDogApiRequest',\n          value: function invokeDataDogApiRequest(url) {\n            var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n            // Set auth params\n            params.api_key = this.api_key;\n            params.application_key = this.application_key;\n\n            return this.backendSrv.datasourceRequest({\n              method: 'GET',\n              url: this.url + url,\n              params: params\n            }).then(function (response) {\n              if (response.data) {\n                return response.data;\n              } else {\n                throw { message: 'DataDog API request error' };\n              }\n            }).catch(function (error) {\n              var message = 'DataDog API request error';\n              if (error.statusText) {\n                message = error.status + ' ' + error.statusText;\n                throw { message: message };\n              } else if (error.err.statusText) {\n                throw { message: error.err.statusText };\n              } else {\n                throw { message: message };\n              }\n            });\n          }\n        }]);\n\n        return DataDogDatasource;\n      }());\n\n      _export('DataDogDatasource', DataDogDatasource);\n    }\n  };\n});\n//# sourceMappingURL=datasource.js.map\n"],"file":"datasource.js"}