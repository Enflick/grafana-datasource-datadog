{"version":3,"sources":["../../src/datasource.js"],"names":["DataDogDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","api_key","jsonData","application_key","app_key","supportMetrics","q","_cached_metrics","datasourceRequest","method","params","then","response","status","message","title","_cached_tags","length","when","fetching_tags","map","data","tags","hosts","tag","text","value","fetching","d","Date","setDate","getDate","from","Math","floor","getTime","self","metrics","metric","options","range","valueOf","to","targets","filter","t","hide","queries","val","query","queryString","join","dataResponse","series","i","target","alias","expression","pointlist","a"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\n\nexport class DataDogDatasource {\n\n  constructor (instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.api_key = instanceSettings.jsonData.api_key;\n    this.application_key = instanceSettings.jsonData.app_key;\n    this.supportMetrics = true;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this._cached_metrics = false;\n  }\n\n  // Function to check Datasource health\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/downtime',\n      method: 'GET',\n      params: {\n        api_key: this.api_key,\n        application_key: this.application_key,\n      }\n    }).then(function(response) {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\",\n        };\n      }\n    });\n  }\n\n  metricFindTags() {\n    if (this._cached_tags && this._cached_tags.length) {\n      return this.q.when(this._cached_tags);\n    }\n\n    if (this.fetching_tags) {\n      return this.fetching_tags;\n    }\n\n    this.fetching_tags = this.backendSrv.datasourceRequest({\n      url: this.url + '/tags/hosts',\n      method: 'GET',\n      params: {\n        api_key: this.api_key,\n        application_key: this.application_key,\n      }\n    }).then(response => {\n      this._cached_tags = _.map(response.data.tags, (hosts, tag) => {\n        return {\n          text: tag,\n          value: tag,\n        };\n      });\n\n      return this._cached_tags;\n    });\n\n    return this.fetching_tags;\n  }\n\n  metricFindQuery() {\n    if (this._cached_metrics) {\n      return this.q.when(this._cached_metrics);\n    }\n\n    if (this.fetching) {\n      return this.fetching;\n    }\n\n    var d = new Date();\n    d.setDate(d.getDate() - 1);\n    var from = Math.floor(d.getTime() / 1000);\n    var self = this;\n\n    this.fetching = this.backendSrv.datasourceRequest({\n      url: self.url + '/metrics',\n      method: 'GET',\n      params: {\n        api_key: self.api_key,\n        application_key: self.application_key,\n        from: from\n      }\n    }).then(function(response) {\n      self._cached_metrics = _.map(response.data.metrics, function (metric) {\n        return {\n          text: metric,\n          value: metric,\n        };\n      });\n\n      return self._cached_metrics;\n    });\n\n    return this.fetching;\n  }\n\n  query(options) {\n    var from = Math.floor(options.range.from.valueOf() / 1000);\n    var to = Math.floor(options.range.to.valueOf() / 1000);\n\n    var targets = options.targets.filter(function (t) { return !t.hide; });\n\n    if (targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n    var queries = _.map(options.targets, function (val) {\n      return val.query;\n    });\n    var queryString = queries.join(',');\n    var query = {\n      api_key: this.api_key,\n      application_key: this.application_key,\n      from: from,\n      to: to,\n      query: queryString,\n    };\n\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/query',\n      params: query,\n      method: 'GET',\n    }).then(function (response) {\n\n      var dataResponse = _.map(response.data.series, function (series, i) {\n        var target = targets[i];\n        return {\n          'target': target.alias || series.expression,\n          'datapoints': _.map(series.pointlist, function (a) {\n            return [a[1], a[0]];\n          })\n        };\n      });\n\n      return {data: dataResponse};\n    });\n  }\n}\n"]}