{"version":3,"sources":["../src/query_builder.js"],"names":["buildQuery","target","adhocFilters","groupByOptions","aggregation","metric","tags","functions","query","functionInstances","getFunctionInstances","length","join","adhocTags","buildAdHocFilterString","globSet","as","groupedFuncs","_","groupBy","func","def","append","each","appends","render","wraps","map","f","dfunc","createFuncInstance","funcDef","withDefaultParams","params","slice","filter","key","value"],"mappings":";;;;;;;AAIO,WAASA,UAAT,CAAoBC,MAApB,EAA4BC,YAA5B,EAAyCC,cAAzC,EAAyD;AAAA,QACzDC,WADyD,GACjBH,MADiB,CACzDG,WADyD;AAAA,QAC5CC,MAD4C,GACjBJ,MADiB,CAC5CI,MAD4C;AAAA,QACpCC,IADoC,GACjBL,MADiB,CACpCK,IADoC;AAAA,QAC9BC,SAD8B,GACjBN,MADiB,CAC9BM,SAD8B;;AAE9D,QAAIC,QAAWJ,WAAX,SAA0BC,MAA9B;;AAEA,QAAII,oBAAqBC,qBAAqBH,SAArB,CAAzB;;AAEA,QAAKD,QAAQA,KAAKK,MAAd,IAA0BT,gBAAgBA,aAAaS,MAA3D,EAAoE;AAClEH,eAAS,GAAT;;AAEA,UAAIF,QAAQA,KAAKK,MAAjB,EAAyB;AACvBH,iBAASF,KAAKM,IAAL,CAAU,GAAV,CAAT;AACD;;AAED,UAAIV,gBAAgBA,aAAaS,MAAjC,EAAyC;AACvC,YAAIE,YAAYC,uBAAuBZ,YAAvB,CAAhB;AACA,YAAII,QAAQA,KAAKK,MAAjB,EAAyB;AACvBH,mBAAS,GAAT;AACD;AACDA,iBAASK,SAAT;AACD;;AAEDL,eAAS,GAAT;AACD,KAhBD,MAgBO;AACLA,eAAS,KAAT;;AAEA,UAAIO,WAAWA,QAAQJ,MAAvB,EAA+B;AAC7BH,iBAAS,MAAT;AACAA,iBAAS,GAAT;AACAA,iBAASO,OAAT;AACAP,iBAAS,GAAT;AACD;AACF;;AAED,QAAIP,OAAOe,EAAX,EAAe;AACbR,eAAS,MAAMP,OAAOe,EAAb,GAAkB,IAA3B;AACD;;AAED,QAAIC,eAAeC,EAAEC,OAAF,CAAUV,iBAAV,EAA6B,gBAAQ;AACtD,UAAIW,KAAKC,GAAL,CAASC,MAAb,EAAqB;AACnB,eAAO,SAAP;AACD,OAFD,MAEO;AACL,eAAO,OAAP;AACD;AACF,KANkB,CAAnB;;AAQAJ,MAAEK,IAAF,CAAON,aAAaO,OAApB,EAA6B,gBAAQ;AACnChB,eAAS,MAAMY,KAAKK,MAAL,EAAf;AACD,KAFD;;AAIAP,MAAEK,IAAF,CAAON,aAAaS,KAApB,EAA2B,gBAAQ;AACjClB,cAAQY,KAAKK,MAAL,CAAYjB,KAAZ,CAAR;AACD,KAFD;;AAIA,WAAOA,KAAP;AACD;;wBAtDeR,U;;AAwDhB,WAASU,oBAAT,CAA8BH,SAA9B,EAAyC;AACvC,WAAOW,EAAES,GAAF,CAAMpB,SAAN,EAAiB,gBAAQ;AAC9B,UAAIqB,IAAIC,MAAMC,kBAAN,CAAyBV,KAAKW,OAA9B,EAAuC,EAACC,mBAAmB,KAApB,EAAvC,CAAR;AACAJ,QAAEK,MAAF,GAAWb,KAAKa,MAAL,CAAYC,KAAZ,EAAX;AACA,aAAON,CAAP;AACD,KAJM,CAAP;AAKD;;AAED,WAASd,sBAAT,CAAgCZ,YAAhC,EAA8C;AAC5C,WAAOA,aAAayB,GAAb,CAAiB,kBAAU;AAChC,aAAOQ,OAAOC,GAAP,GAAa,GAAb,GAAmBD,OAAOE,KAAjC;AACD,KAFM,EAEJzB,IAFI,CAEC,GAFD,CAAP;AAGD;;;AAxEMM,O;;AACAW,W;;AACCd,a,eAAAA,O","file":"query_builder.js","sourcesContent":["import _ from 'lodash';\nimport dfunc from './dfunc';\nimport {globSet} from './query_ctrl';\n\nexport function buildQuery(target, adhocFilters,groupByOptions) {\n  let {aggregation, metric, tags, functions} = target;\n  let query = `${aggregation}:${metric}`;\n\n  let functionInstances  = getFunctionInstances(functions);\n\n  if ((tags && tags.length) || (adhocFilters && adhocFilters.length)) {\n    query += '{';\n\n    if (tags && tags.length) {\n      query += tags.join(',');\n    }\n\n    if (adhocFilters && adhocFilters.length) {\n      let adhocTags = buildAdHocFilterString(adhocFilters);\n      if (tags && tags.length) {\n        query += ',';\n      }\n      query += adhocTags;\n    }\n\n    query += '}';\n  } else {\n    query += '{*}';\n\n    if (globSet && globSet.length) {\n      query += ' by ';\n      query += '{';\n      query += globSet;\n      query += '}';\n    }\n  }\n\n  if (target.as) {\n    query += '.' + target.as + '()';\n  }\n\n  var groupedFuncs = _.groupBy(functionInstances, func => {\n    if (func.def.append) {\n      return 'appends';\n    } else {\n      return 'wraps';\n    }\n  });\n\n  _.each(groupedFuncs.appends, func => {\n    query += '.' + func.render();\n  });\n\n  _.each(groupedFuncs.wraps, func => {\n    query = func.render(query);\n  });\n\n  return query;\n}\n\nfunction getFunctionInstances(functions) {\n  return _.map(functions, func => {\n    var f = dfunc.createFuncInstance(func.funcDef, {withDefaultParams: false});\n    f.params = func.params.slice();\n    return f;\n  });\n}\n\nfunction buildAdHocFilterString(adhocFilters) {\n  return adhocFilters.map(filter => {\n    return filter.key + ':' + filter.value;\n  }).join(',');\n}\n"]}