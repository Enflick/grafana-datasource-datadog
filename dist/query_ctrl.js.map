{"version":3,"sources":["../src/query_ctrl.js"],"names":["_","dfunc","QueryCtrl","DataDogQueryCtrl","$scope","$injector","$q","uiSegmentSrv","removeText","target","aggregation","aggregationSegment","newSegment","value","fake","custom","metric","metricSegment","tagSegments","self","tags","map","tag","push","fixTagSegments","functions","func","f","createFuncInstance","funcDef","withDefaultParams","params","slice","as","asSegment","rawQuery","query","length","join","groupedFuncs","groupBy","def","append","each","appends","render","wraps","datasource","metricFindQuery","when","text","segment","metricFindTags","then","results","first","resultsHaveRemoveText","segmentIsPlusButton","type","splice","setQuery","panelCtrl","refresh","count","lastSegment","Math","max","newPlusButton","error","name","without","persistFunctions","targetChanged","added","index","console","log","filter","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport dfunc from './dfunc';\nimport {QueryCtrl} from 'app/plugins/sdk';\nimport './func_editor';\nimport './add_datadog_func';\n\nexport class DataDogQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n    this.removeText = '-- remove tag --';\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    if (this.target.aggregation) {\n      this.aggregationSegment = new uiSegmentSrv.newSegment(\n        this.target.aggregation\n      );\n    } else {\n      this.aggregationSegment = new uiSegmentSrv.newSegment({\n        value: 'Select Aggregation',\n        fake: true,\n        custom: false,\n      });\n    }\n\n    if (this.target.metric) {\n      this.metricSegment = new uiSegmentSrv.newSegment(\n        this.target.metric\n      );\n    } else {\n      this.metricSegment = new uiSegmentSrv.newSegment({\n        value: 'Select Metric',\n        fake: true,\n        custom: false,\n      });\n    }\n\n    this.tagSegments = [];\n    var self = this;\n    this.target.tags = this.target.tags || [];\n    _.map(this.target.tags, function (tag) {\n      self.tagSegments.push(uiSegmentSrv.newSegment(tag));\n    });\n\n    this.fixTagSegments();\n\n    this.functions = [];\n    this.target.functions = this.target.functions || [];\n    _.map(this.target.functions, function (func) {\n      var f = dfunc.createFuncInstance(func.funcDef, {withDefaultParams: false});\n      f.params = func.params.slice();\n      self.functions.push(f);\n    });\n\n    if (this.target.as) {\n      this.asSegment = uiSegmentSrv.newSegment(this.target.as);\n    } else {\n      this.asSegment = uiSegmentSrv.newSegment({\n        value: 'Select As',\n        fake: true,\n        custom: false,\n      });\n    }\n\n  }\n\n  toggleEditorMode() {\n    this.target.rawQuery = !this.target.rawQuery;\n  }\n\n  setQuery() {\n    this.target.query = this.aggregationSegment.value;\n    if (! this.metricSegment.fake) {\n      this.target.query += \":\" + this.metricSegment.value;\n    }\n    if (!this.target.tags || this.target.tags.length === 0) {\n      this.target.query += '{*}';\n    } else {\n      this.target.query += '{' + this.target.tags.join(',') + '}';\n    }\n\n    if (this.target.as) {\n      this.target.query += '.' + this.target.as + '()';\n    }\n\n    var groupedFuncs = _.groupBy(this.functions, func => {\n      if (func.def.append) {\n        return 'appends';\n      } else {\n        return 'wraps';\n      }\n    });\n\n    _.each(groupedFuncs.appends, func => {\n      this.target.query += '.'  + func.render();\n    });\n\n    _.each(groupedFuncs.wraps, func => {\n      this.target.query = func.render(this.target.query);\n    });\n  }\n\n  getMetrics() {\n    return this.datasource.metricFindQuery();\n  }\n\n  getAggregations() {\n    return this.$q.when([\n      {text: 'avg by', value: 'avg'},\n      {text: 'max by', value: 'max'},\n      {text: 'min by', value: 'min'},\n      {text: 'sub by', value: 'sum'},\n    ]);\n  }\n\n  getAs() {\n    return this.$q.when([\n      {text: 'None', value: 'None'},\n      {text: 'as_count', value: 'as_count'},\n      {text: 'as_rate', value: 'as_rate'},\n    ]);\n  }\n\n  getTags(segment) {\n    var self = this;\n    return this.datasource.metricFindTags().then(function (results) {\n      var first = results && results[0];\n      var resultsHaveRemoveText = first && first.text === self.removeText;\n      var segmentIsPlusButton = segment.type === 'plus-button';\n      // var removeResultsText = resultsHaveRemoveText && segmentIsPlusButton;\n      if (resultsHaveRemoveText) {\n        results.splice(0, 1);\n      }\n\n      if (!segmentIsPlusButton) {\n        results.splice(0, 0, {text: self.removeText, value: self.removeText});\n      }\n\n      return results;\n    });\n  }\n\n  aggregationChanged() {\n    this.setQuery();\n    this.target.aggregation = this.aggregationSegment.value;\n    this.panelCtrl.refresh();\n  }\n\n  metricChanged() {\n    this.target.metric = this.metricSegment.value;\n    this.setQuery();\n    this.panelCtrl.refresh();\n  }\n\n  asChanged() {\n    if (this.asSegment.value === 'None') {\n      this.target.as = null;\n    } else {\n      this.target.as = this.asSegment.value;\n    }\n    this.setQuery();\n    this.panelCtrl.refresh();\n  }\n\n  fixTagSegments() {\n    var count = this.tagSegments.length;\n    var lastSegment = this.tagSegments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  targetChanged() {\n    if (this.error) {\n      return;\n    }\n\n    this.setQuery();\n    this.panelCtrl.refresh();\n  }\n\n  persistFunctions () {\n    this.target.functions = _.map(this.functions, func => {\n      return {\n        funcDef: func.def.name,\n        params: func.params.slice(),\n      };\n    });\n  }\n\n  removeFunction(func) {\n    this.functions = _.without(this.functions, func);\n    this.persistFunctions();\n    this.targetChanged();\n  }\n\n  addFunction(funcDef) {\n    var func = dfunc.createFuncInstance(funcDef, {withDefaultParams: true});\n    func.added = true;\n    this.functions.push(func);\n    this.persistFunctions();\n    this.targetChanged();\n  }\n\n  tagSegmentUpdated(segment, index) {\n    if (segment.value === this.removeText) {\n      this.tagSegments.splice(index, 1);\n    }\n    console.log(\"target segments\", this.tagSegments);\n    this.target.tags = _.filter(_.map(this.tagSegments, function (segment) {\n      return segment.value;\n    }));\n    console.log(\"setting target tags\", this.target.tags);\n    this.setQuery();\n    this.panelCtrl.refresh();\n\n    var count = this.tagSegments.length;\n    var lastSegment = this.tagSegments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  getCollapsedText() {\n    return this.target.query;\n  }\n}\n\nDataDogQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}