{"version":3,"sources":["../src/query_ctrl.js"],"names":["_","QueryCtrl","DataDogQueryCtrl","$scope","$injector","$q","uiSegmentSrv","removeText","target","aggregation","aggregationSegment","newSegment","value","fake","custom","metric","metricSegment","tagSegments","self","tags","map","tag","push","fixTagSegments","as","asSegment","query","length","join","datasource","metricFindQuery","when","text","segment","metricFindTags","then","results","first","resultsHaveRemoveText","segmentIsPlusButton","type","splice","setQuery","panelCtrl","refresh","count","lastSegment","Math","max","newPlusButton","index","console","log","filter","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport {QueryCtrl} from 'app/plugins/sdk';\n\nexport class DataDogQueryCtrl extends QueryCtrl {\n\n  constructor($scope, $injector, $q, uiSegmentSrv)  {\n    super($scope, $injector);\n    this.removeText = '-- remove tag --';\n    this.$q = $q;\n    this.uiSegmentSrv = uiSegmentSrv;\n    if (this.target.aggregation) {\n      this.aggregationSegment = new uiSegmentSrv.newSegment(\n        this.target.aggregation\n      );\n    } else {\n      this.aggregationSegment = new uiSegmentSrv.newSegment({\n        value: 'Select Aggregation',\n        fake: true,\n        custom: false,\n      });\n    }\n\n    if (this.target.metric) {\n      this.metricSegment = new uiSegmentSrv.newSegment(\n        this.target.metric\n      );\n    } else {\n      this.metricSegment = new uiSegmentSrv.newSegment({\n        value: 'Select Metric',\n        fake: true,\n        custom: false,\n      });\n    }\n\n    this.tagSegments = [];\n    var self = this;\n    this.target.tags = this.target.tags || [];\n    _.map(this.target.tags, function (tag) {\n      self.tagSegments.push(uiSegmentSrv.newSegment(tag));\n    });\n\n    this.fixTagSegments();\n\n    if (this.target.as) {\n      this.asSegment = uiSegmentSrv.newSegment(this.target.as);\n    } else {\n      this.asSegment = uiSegmentSrv.newSegment({\n        value: 'Select As',\n        fake: true,\n        custom: false,\n      });\n    }\n\n  }\n\n  setQuery() {\n    this.target.query = this.aggregationSegment.value;\n    if (! this.metricSegment.fake) {\n      this.target.query += \":\" + this.metricSegment.value;\n    }\n    if (!this.target.tags || this.target.tags.length === 0) {\n      this.target.query += '{*}';\n    } else {\n      this.target.query += '{' + this.target.tags.join(',') + '}';\n    }\n\n    if (this.target.as) {\n      this.target.query += '.' + this.target.as + '()'; //i\n    }\n  }\n\n  getMetrics() {\n    return this.datasource.metricFindQuery();\n  }\n\n  getAggregations() {\n    return this.$q.when([\n      {text: 'avg by', value: 'avg'},\n      {text: 'max by', value: 'max'},\n      {text: 'min by', value: 'min'},\n      {text: 'sub by', value: 'sum'},\n    ]);\n  }\n\n  getAs() {\n    return this.$q.when([\n      {text: 'None', value: 'None'},\n      {text: 'as_count', value: 'as_count'},\n      {text: 'as_rate', value: 'as_rate'},\n    ]);\n  }\n\n  getTags(segment) {\n    var self = this;\n    return this.datasource.metricFindTags().then(function (results) {\n      var first = results && results[0];\n      var resultsHaveRemoveText = first && first.text === self.removeText;\n      var segmentIsPlusButton = segment.type === 'plus-button';\n      // var removeResultsText = resultsHaveRemoveText && segmentIsPlusButton;\n      if (resultsHaveRemoveText) {\n        results.splice(0, 1);\n      }\n\n      if (!segmentIsPlusButton) {\n        results.splice(0, 0, {text: self.removeText, value: self.removeText});\n      }\n\n      return results;\n    });\n  }\n\n  aggregationChanged() {\n    this.setQuery();\n    this.target.aggregation = this.aggregationSegment.value;\n    this.panelCtrl.refresh();\n  }\n\n  metricChanged() {\n    this.target.metric = this.metricSegment.value;\n    this.setQuery();\n    this.panelCtrl.refresh();\n  }\n\n  asChanged() {\n    if (this.asSegment.value === 'None') {\n      this.target.as = null;\n    } else {\n      this.target.as = this.asSegment.value;\n    }\n    this.setQuery();\n    this.panelCtrl.refresh();\n  }\n\n  fixTagSegments() {\n    var count = this.tagSegments.length;\n    var lastSegment = this.tagSegments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n  }\n\n  tagSegmentUpdated(segment, index) {\n    if (segment.value === this.removeText) {\n      this.tagSegments.splice(index, 1);\n    }\n    console.log(\"target segments\", this.tagSegments);\n    this.target.tags = _.filter(_.map(this.tagSegments, function (segment) {\n      return segment.value;\n    }));\n    console.log(\"setting target tags\", this.target.tags);\n    this.setQuery();\n    this.panelCtrl.refresh();\n\n    var count = this.tagSegments.length;\n    var lastSegment = this.tagSegments[Math.max(count-1, 0)];\n\n    if (!lastSegment || lastSegment.type !== 'plus-button') {\n      this.tagSegments.push(this.uiSegmentSrv.newPlusButton());\n    }\n\n  }\n}\n\nDataDogQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}